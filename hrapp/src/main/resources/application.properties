
#provide the data source settings to help the JPA/ Hibernate to connect to the DB.

spring.datasource.url=jdbc:mysql://localhost:3306/graduates_2020_masteknet
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#JPA automatic schema configuration for JPA using Hibernate
# Configuring the DB name to be used in this application.
spring.jpa.database=MYSQL

# Configure the JPA to manage DB tables using configuration.
# Here we can specify multiple values: 
# a. validate: checks if the table is present as per the class config. on any mismatch of the structure it will raise an exception.
# b. Update: Checks if the tables are present as per the class. If not present it will create new tables in the DB.
#		if there is a mismatch it will alter the table with column changes.
# c. Create: Drops all the mapped tables if found in the database. It recreates the tables in the DB for managing data.
#		Used only on test DBs and testing scenarios.
# d. Create-drop: if the table exists, it will drop all the mapped tables from the database.
#		It recreates the database tables for managing data on application shutdown, it will drop all tables from the DB.
#		For demo/testing scenarios
spring.jpa.hibernate.ddl-auto=update
#the above will be update or validate.

#display the sql queries executed by hibernate for database applications
spring.jpa.show-sql=true


